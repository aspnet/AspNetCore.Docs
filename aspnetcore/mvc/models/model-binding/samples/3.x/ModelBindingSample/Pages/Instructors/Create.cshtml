@page
@model Instructors.CreateModel

@{
    ViewData["Title"] = "Create Instructor";
}

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="Instructor.FirstName" class="control-label"></label>
                <input asp-for="Instructor.FirstName" class="form-control" />
                <span asp-validation-for="Instructor.FirstName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Instructor.LastName" class="control-label"></label>
                <input asp-for="Instructor.LastName" class="form-control" />
                <span asp-validation-for="Instructor.LastName" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Instructor.DateHired" class="control-label"></label>
                <input asp-for="Instructor.DateHired" class="form-control" />
                <span asp-validation-for="Instructor.DateHired" class="text-danger"></span>
            </div>

            <div class="form-group">
                @for (var i = 0; i < Model.Courses.Count; i++)
                {
                    var course = Model.Courses[i];

                    <div class="form-check">
                        <label class="form-check-label">
                            @{
                                var inputFormat = 1;

                                // 1: selectedCourses=1000&selectedCourses=1001
                                // 2: selectedCourses[0]=1000&selectedCourses[1]=10001
                                // 3: selectedCourses[]=1000&selectedCourses[]=10001

                                string inputName;

                                switch (inputFormat)
                                {
                                    default:
                                    case 1:
                                        inputName = "selectedCourses";
                                        break;

                                    case 2:
                                        inputName = $"selectedCourses[{i}]";
                                        break;

                                    case 3:
                                        inputName = "selectedCourses[]";
                                        break;
                                }

                                <input type="checkbox" name="@inputName" value="@course.Id" checked="@Model.SelectedCourses.Contains(course.Id)" class="form-check-input" />
                            }
                            @course.Id: @course.Title
                        </label>
                    </div>
                }
            </div>

            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
                <input type="submit" value="Submit with Invalid Date" class="btn btn-danger" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <script src="~/js/submitInvalidDateHired.js"></script>
}
